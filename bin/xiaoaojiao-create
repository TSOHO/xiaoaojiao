#!/usr/bin/env node

const githubAPI = require('../util/github')
const inquirer = require('inquirer')
const chalk = require('chalk')
const ora = require('ora')
const mkdirp = require('mkdirp')

const fs = require('fs')
const path = require('path')

const spinner = ora('loading')

function start () {
  inquirer.prompt({
    type: 'input',
    name: 'directory',
    message: '请输入要创建项目的目录名称：'
  }).then(answers => {
    const directory = answers.directory
    if (fs.existsSync(directory)) {
      inquirer.prompt({
        type: 'confirm',
        name: 'ok',
        message: `[${chalk.blue(directory)}]目录已经存在，是否覆盖 ?`
      }).then(answers => {
        if (answers.ok) {
          mkdir(directory, getList)
        }
      })
    } else {
      mkdir(directory, getList)
    }
  })
}

/**
 * 创建文件夹
 *
 * @param {any} path
 * @param {any} callback
 */
function mkdir (path, callback) {
  mkdirp(path, function (err) {
    if (err) {
      console.error(err)
    } else {
      setTimeout(() => { callback && callback() }, 100)
    }
  })
}

/**
 * 获取模板列表
 *
 */
function getList () {
  spinner.start()
  githubAPI.getTemplateList().then(function (response) {
    const templates = response.data.filter(v => v.name.indexOf('template-') > -1)

    spinner.stop()
    inquirerList(templates)
  })
}

/**
 * 选定模板
 *
 * @param {any} templates
 */
function inquirerList (templates) {
  const list = templates.map(v => {
    const name = v.name.replace('template-', '')

    return {
      name: chalk.yellow('★') + ' ' + chalk.blue(name) + ' - ' + v.description,
      value: name,
      short: name
    }
  })

  inquirer.prompt({
    type: 'list',
    message: '请选择要使用的模板',
    name: 'template',
    choices: list
  }).then(answers => {
    pullTemplate(answers.template)
  })
}

/**
 * 拉去模板文件
 *
 */
function pullTemplate (name) {
  if (fs.existsSync(githubAPI.localPackage(name))) {
    console.log('has')
  } else {
    console.log('no')
  }
  // return fs.existsSync(this.localPackage) ? getGithubPackageV(require(this.localPackage).version) : requestGithub()
}

start()
